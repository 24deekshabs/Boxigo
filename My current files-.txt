My current files:-
apiService.js:-

import axios from 'axios';

const API_URL = 'http://test.api.boxigo.in/sample-data/';
export const fetchData = async () => {
  try {
    const response = await axios.get(API_URL);
    console.log('API Response:', response.data); // Logging the API response
    return response.data;
  } catch (error) {
    console.error('Error fetching data:', error); // Logging any error
    throw error;
  }
};

***************************************************************************************
MoveDetails.js:-

import React, { useState } from 'react';
import './MoveDetails.css';

const MoveDetails = ({ details }) => {
  const {
    estimate_id,
    moving_from,
    moving_to,
    property_size,
    total_items,
    distance,
    moving_on,
    additional_information,
    items = {}, // Ensure items is part of the details object
    old_floor_no,
    old_elevator_availability,
    old_packing_required,
    old_distance_from_truck_to_door,
    new_floor_no,
    new_elevator_availability,
    new_packing_required,
    new_distance_from_truck_to_door
  } = details;

  const [isExpanded, setIsExpanded] = useState(false);

  const toggleExpand = () => {
    setIsExpanded(!isExpanded);
  };

  return (
    <div className="move-details">
      <div className="request-id">Request# {estimate_id}</div>
      <div className="move-info">
        <div>
          <strong>From:</strong> {moving_from}
        </div>
        <div>
          <strong>To:</strong> {moving_to}
        </div>
        <div className="move-property">
          <div>
            <span role="img" aria-label="house">üè†</span> {property_size}
          </div>
          <div>
            <span role="img" aria-label="boxes">üì¶</span> {total_items}
          </div>
          <div>
            <span role="img" aria-label="distance">üìè</span> {distance} km
          </div>
          <div>
            <span role="img" aria-label="calendar">üìÖ</span> {new Date(moving_on).toLocaleString()}
          </div>
        </div>
        <div className="disclaimer">
          Disclaimer: {additional_information}
        </div>
      </div>
      <div className="action-buttons">
        <button className="btn-details" onClick={toggleExpand}>
          {isExpanded ? 'Hide Move Details' : 'View Move Details'}
        </button>
        <button className="btn-quotes">Quotes Awaiting</button>
      </div>
      {isExpanded && (
        <div className="expanded-details">
          <h3>Inventory Details</h3>
          <div className="inventory">
            <details>
              <summary>Living Room ({items.Living_Room ? items.Living_Room.length : 0})</summary>
              <div className="room-details">
                {items.Living_Room && items.Living_Room.length > 0 ? (
                  items.Living_Room.map((item, index) => (
                    <div key={index} className="inventory-item">
                      <div>{item.name}</div>
                      <div>{item.quantity}</div>
                    </div>
                  ))
                ) : (
                  <div>No items available</div>
                )}
              </div>
            </details>
            <details>
              <summary>Bed Room ({items.Bed_Room ? items.Bed_Room.length : 0})</summary>
              <div className="room-details">
                {items.Bed_Room && items.Bed_Room.length > 0 ? (
                  items.Bed_Room.map((item, index) => (
                    <div key={index} className="inventory-item">
                      <div>{item.name}</div>
                      <div>{item.quantity}</div>
                    </div>
                  ))
                ) : (
                  <div>No items available</div>
                )}
              </div>
            </details>
            <details>
              <summary>Kitchen ({items.Kitchen ? items.Kitchen.length : 0})</summary>
              <div className="room-details">
                {items.Kitchen && items.Kitchen.length > 0 ? (
                  items.Kitchen.map((item, index) => (
                    <div key={index} className="inventory-item">
                      <div>{item.name}</div>
                      <div>{item.quantity}</div>
                    </div>
                  ))
                ) : (
                  <div>No items available</div>
                )}
              </div>
            </details>
            <details>
              <summary>Bathroom ({items.Bathroom ? items.Bathroom.length : 0})</summary>
              <div className="room-details">
                {items.Bathroom && items.Bathroom.length > 0 ? (
                  items.Bathroom.map((item, index) => (
                    <div key={index} className="inventory-item">
                      <div>{item.name}</div>
                      <div>{item.quantity}</div>
                    </div>
                  ))
                ) : (
                  <div>No items available</div>
                )}
              </div>
            </details>
          </div>
          <h3>House Details</h3>
          <div className="house-details">
            <div>
              <strong>Existing House Details:</strong>
              <div>Floor No.: {old_floor_no}</div>
              <div>Elevator Available: {old_elevator_availability}</div>
              <div>Packing Required: {old_packing_required}</div>
              <div>Distance from truck to door: {old_distance_from_truck_to_door}</div>
            </div>
            <div>
              <strong>New House Details:</strong>
              <div>Floor No.: {new_floor_no}</div>
              <div>Elevator Available: {new_elevator_availability}</div>
              <div>Packing Required: {new_packing_required}</div>
              <div>Distance from truck to door: {new_distance_from_truck_to_door}</div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default MoveDetails;

***************************************************************************************
  Mymoves.js:-

import React, { useState, useEffect } from 'react';
import { fetchData } from '../apiService';
import MoveDetails from './MoveDetails';
import './MyMoves.css';

const MyMoves = () => {
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const getData = async () => {
      try {
        const result = await fetchData();
        console.log('Fetched Data:', result);
        setData(result.Customer_Estimate_Flow);
        setLoading(false);
      } catch (error) {
        console.error('Error fetching data:', error);
        setError(error);
        setLoading(false);
      }
    };

    getData();
  }, []);

  if (loading) {
    return <div className="container">Loading...</div>;
  }

  if (error) {
    return <div className="container">Error: {error.message}</div>;
  }

  return (
    <div className="main-container">
      <div className="header">
        <h1>My Moves</h1>
      </div>
      <div className="content">
        {data ? (
          data.map((details) => (
            <MoveDetails key={details.estimate_id} details={details} />
          ))
        ) : (
          <div>No customer details available.</div>
        )}
      </div>
    </div>
  );
};

export default MyMoves;

**************************************************************************************
MyMoves.css:-
/* MyMoves.css */
.main-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    padding-top: 20px;
    box-sizing: border-box;
  }
  
  .header {
    width: 100%;
    background: #fff;
    padding: 20px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    text-align: center;
  }
  
  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
  }
  
  .content {
    display: flex;
    flex-direction: column;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    box-sizing: border-box;
  }
  
  .move-details {
    display: flex;
    flex-direction: column;
    background-color: #fff;
    border: 1px solid #ddd;
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    width: 100%;
  }
  
  .move-info {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .request-id {
    font-weight: bold;
  }
  
  .move-property {
    display: flex;
    gap: 20px;
    align-items: center;
  }
  
  .disclaimer {
    margin-top: 10px;
    color: red;
  }
  
  .action-buttons {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
  }
  
  .btn-details {
    background-color: #ff6f61;
    color: white;
    padding: 10px;
    border: none;
    cursor: pointer;
    border-radius: 5px;
  }
  
  .btn-quotes {
    background-color: #f44336;
    color: white;
    padding: 10px;
    border: none;
    cursor: pointer;
    border-radius: 5px;
  }
  
  .expanded-details {
    margin-top: 20px;
  }
  
  .inventory {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  
  .inventory-item {
    display: flex;
    justify-content: space-between;
    border-bottom: 1px solid #ddd;
    padding: 10px 0;
  }
  
  .house-details {
    display: flex;
    flex-direction: column;
    margin-top: 20px;
    gap: 10px;
  }
  